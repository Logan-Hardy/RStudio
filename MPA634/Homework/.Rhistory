knitr::opts_chunk$set(echo = TRUE,
message = FALSE)
library(tidyverse)
num_vec <- c(1:12)
string_vec <- c("PIZZA", "STROGANOFF", "CAKE", "MALAI KOFTA")
# Make a for loop that loops through num_vec and prints whether each value is greater than 7
for (i in num_vec) {
if (i > 7) {
print(TRUE)
}
else {
print(FALSE)
}
}
for (i in seq_along(string_vec)) {
string_vec[[i]] = str_to_title(string_vec[[i]])
print(paste0(string_vec[[i]], ' is my favorite food'))
}
for (i in string_vec) {
i = str_to_title(i)
print(paste0(i, ' is my favorite food'))
}
for (i in seq_along(string_vec)) {
string_vec[[i]] = str_to_title(string_vec[[i]])
print(paste0(string_vec[[i]], ' is my favorite food'))
}
# Make a for loop with the string_vec that will check if the food is cake, then if it is have it print "This is dessert!". Then have it check if the food is Malai Kofta, in which case it should print "This is an Indian dish!" and if it is neither, print "This is comfort food."
for (in in seq_along(string_vec)) {
# Make a for loop with the string_vec that will check if the food is cake, then if it is have it print "This is dessert!". Then have it check if the food is Malai Kofta, in which case it should print "This is an Indian dish!" and if it is neither, print "This is comfort food."
for (i in seq_along(string_vec)) {
if (str_to_lower(string_vec[[i]]) == 'cake') {
print('This is dessert!')
else if (str_to_lower(string_vec[[i]] == 'malai kofta')) {
# Make a for loop with the string_vec that will check if the food is cake, then if it is have it print "This is dessert!". Then have it check if the food is Malai Kofta, in which case it should print "This is an Indian dish!" and if it is neither, print "This is comfort food."
for (i in seq_along(string_vec)) {
if (str_to_lower(string_vec[[i]]) == 'cake') {
print('This is dessert!')
} else if (str_to_lower(string_vec[[i]] == 'malai kofta')) {
print('This is an Indian dish!')
} else {
print('This is comfort food.')
}
}
# Make a for loop with the string_vec that will check if the food is cake, then if it is have it print "This is dessert!". Then have it check if the food is Malai Kofta, in which case it should print "This is an Indian dish!" and if it is neither, print "This is comfort food."
for (i in seq_along(string_vec)) {
if (str_to_lower(string_vec[[i]]) == 'cake') {
print('This is dessert!')
} else if (str_to_lower(string_vec[[i]] == 'MALAI KOFTA')) {
print('This is an Indian dish!')
} else {
print('This is comfort food.')
}
}
# Make a for loop with the string_vec that will check if the food is cake, then if it is have it print "This is dessert!". Then have it check if the food is Malai Kofta, in which case it should print "This is an Indian dish!" and if it is neither, print "This is comfort food."
for (i in seq_along(string_vec)) {
print(string_vec[[i]])
if (str_to_lower(string_vec[[i]]) == 'cake') {
print('This is dessert!')
} else if (str_to_lower(string_vec[[i]] == 'MALAI KOFTA')) {
print('This is an Indian dish!')
} else {
print('This is comfort food.')
}
}
# Make a for loop with the string_vec that will check if the food is cake, then if it is have it print "This is dessert!". Then have it check if the food is Malai Kofta, in which case it should print "This is an Indian dish!" and if it is neither, print "This is comfort food."
for (i in seq_along(string_vec)) {
print(string_vec[[i]])
if (str_to_lower(string_vec[[i]]) == 'cake') {
print('This is dessert!')
} else if (str_to_lower(string_vec[[i]] == 'Malai Kofta')) {
print('This is an Indian dish!')
} else {
print('This is comfort food.')
}
}
# Make a for loop with the string_vec that will check if the food is cake, then if it is have it print "This is dessert!". Then have it check if the food is Malai Kofta, in which case it should print "This is an Indian dish!" and if it is neither, print "This is comfort food."
for (i in seq_along(string_vec)) {
print(string_vec[[i]])
if (str_to_lower(string_vec[[i]]) == 'cake') {
print('This is dessert!')
} else if (str_to_lower(string_vec[[i]]) == 'Malai Kofta') {
print('This is an Indian dish!')
} else {
print('This is comfort food.')
}
}
# Make a for loop with the string_vec that will check if the food is cake, then if it is have it print "This is dessert!". Then have it check if the food is Malai Kofta, in which case it should print "This is an Indian dish!" and if it is neither, print "This is comfort food."
for (i in seq_along(string_vec)) {
print(string_vec[[i]])
if (str_to_lower(string_vec[[i]]) == 'cake') {
print('This is dessert!')
} else if (str_to_lower(string_vec[[i]]) == 'malai kofta') {
print('This is an Indian dish!')
} else {
print('This is comfort food.')
}
}
# Make a for loop with the string_vec that will check if the food is cake, then if it is have it print "This is dessert!". Then have it check if the food is Malai Kofta, in which case it should print "This is an Indian dish!" and if it is neither, print "This is comfort food."
for (i in seq_along(string_vec)) {
if (str_to_lower(string_vec[[i]]) == 'cake') {
print('This is dessert!')
} else if (str_to_lower(string_vec[[i]]) == 'malai kofta') {
print('This is an Indian dish!')
} else {
print('This is comfort food.')
}
}
for (i in num_vec) {
if (i == 11) {
next
}
print(i)
}
for (i in num_vec) {
if (i > 6) {
break
}
print(i)
}
lower_case <- c()
for (i in seq_along(string_vec)) {
lower_case[[i]] = str_to_lower(string_vec[[i]])
}
# Then print out the new vector.
print(lower_case)
diamonds
print('This is an ordinal column')
# Loop through each of the columns in the diamonds dataframe. (It may help you to take a look at the dataframe by typing diamonds in your console) If it is numeric, print the median of that column. If it is ordinal, print "This is an ordinal column". (Hint: use is.numeric to test the class)
for (col in colnames(diamonds)) {
if (is.numeric(col)) {
print(median(col))
}
else {
print('This is an ordinal column')
}
}
diamonds
for (col in colnames(diamonds)) {
if (is.numeric(diamonds[[col]])) {
print(median(diamonds[[col]]))
}
else {
print('This is an ordinal column')
}
}
